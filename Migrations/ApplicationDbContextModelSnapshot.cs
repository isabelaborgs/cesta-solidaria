// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using app.Models;

#nullable disable

namespace app.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("app.Models.ItemOferta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Alimento")
                        .HasColumnType("int");

                    b.Property<int>("IdOferta")
                        .HasColumnType("int");

                    b.Property<int>("MedidaItem")
                        .HasColumnType("int");

                    b.Property<int>("QtdeItem")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdOferta");

                    b.ToTable("ItemOferta");
                });

            modelBuilder.Entity("app.Models.ItemSolicitacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Alimento")
                        .HasColumnType("int");

                    b.Property<int>("MedidaItem")
                        .HasColumnType("int");

                    b.Property<int>("QtdeItem")
                        .HasColumnType("int");

                    b.Property<int>("SolicitacaoDoacaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SolicitacaoDoacaoId");

                    b.ToTable("ItemSolicitacao");
                });

            modelBuilder.Entity("app.Models.Notificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataNotificacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<bool>("IsLida")
                        .HasColumnType("bit");

                    b.Property<int>("TipoNotificacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Notificacao");
                });

            modelBuilder.Entity("app.Models.OfertaDoacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAgendada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuarioDoador")
                        .HasColumnType("int");

                    b.Property<bool>("IsCestaCompleta")
                        .HasColumnType("bit");

                    b.Property<string>("JustificativaCancelamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtdeCestas")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TipoTransporte")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuarioDoador");

                    b.ToTable("OfertaDoacao");
                });

            modelBuilder.Entity("app.Models.OpcaoAgendamentoOferta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiaDaSemana")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("HorarioFinal")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HorarioInicio")
                        .HasColumnType("time");

                    b.Property<int>("IdOferta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdOferta");

                    b.ToTable("OpcaoAgendamentoOferta");
                });

            modelBuilder.Entity("app.Models.OpcaoAgendamentoSolicit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiaDaSemana")
                        .HasColumnType("int");

                    b.Property<string>("DiaSemana")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("HorarioFim")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HorarioInicio")
                        .HasColumnType("time");

                    b.Property<int>("SolicitacaoDoacaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SolicitacaoDoacaoId");

                    b.ToTable("OpcaoAgendamentoSolicit");
                });

            modelBuilder.Entity("app.Models.SolicitacaoDoacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataSolicitacao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUsuarioOng")
                        .HasColumnType("int");

                    b.Property<bool>("IsCestaCompleta")
                        .HasColumnType("bit");

                    b.Property<string>("JustificativaCancelamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeOng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtdeCestas")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TipoTransporte")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuarioOng");

                    b.ToTable("SolicitacaoDoacao");
                });

            modelBuilder.Entity("app.Models.Transacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAgendada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("FimHorarioAgendado")
                        .HasColumnType("time");

                    b.Property<int>("IdDoador")
                        .HasColumnType("int");

                    b.Property<int?>("IdOferta")
                        .HasColumnType("int");

                    b.Property<int>("IdOng")
                        .HasColumnType("int");

                    b.Property<int?>("IdSolicitacao")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("InicioHorarioAgendado")
                        .HasColumnType("time");

                    b.Property<string>("JustificativaCancelamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TipoDoacao")
                        .HasColumnType("int");

                    b.Property<int>("TipoTransporte")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdDoador");

                    b.HasIndex("IdOferta");

                    b.HasIndex("IdOng");

                    b.HasIndex("IdSolicitacao");

                    b.ToTable("Transacao");
                });

            modelBuilder.Entity("app.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Complemento")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("TipoDeUsuario")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasDiscriminator<string>("TipoDeUsuario").HasValue("Usuario");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("app.Models.UsuarioDoadorPf", b =>
                {
                    b.HasBaseType("app.Models.Usuario");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.ToTable("Usuario");

                    b.HasDiscriminator().HasValue("UsuarioDoadorPf");
                });

            modelBuilder.Entity("app.Models.UsuarioDoadorPj", b =>
                {
                    b.HasBaseType("app.Models.Usuario");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("Cnpj");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("RazaoSocial");

                    b.ToTable("Usuario");

                    b.HasDiscriminator().HasValue("UsuarioDoadorPj");
                });

            modelBuilder.Entity("app.Models.UsuarioOng", b =>
                {
                    b.HasBaseType("app.Models.Usuario");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("Cnpj");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("RazaoSocial");

                    b.ToTable("Usuario");

                    b.HasDiscriminator().HasValue("UsuarioOng");
                });

            modelBuilder.Entity("app.Models.ItemOferta", b =>
                {
                    b.HasOne("app.Models.OfertaDoacao", "Oferta")
                        .WithMany("ItensOferta")
                        .HasForeignKey("IdOferta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Oferta");
                });

            modelBuilder.Entity("app.Models.ItemSolicitacao", b =>
                {
                    b.HasOne("app.Models.SolicitacaoDoacao", "SolicitacaoDoacao")
                        .WithMany("ItensSolicitacao")
                        .HasForeignKey("SolicitacaoDoacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SolicitacaoDoacao");
                });

            modelBuilder.Entity("app.Models.Notificacao", b =>
                {
                    b.HasOne("app.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("app.Models.OfertaDoacao", b =>
                {
                    b.HasOne("app.Models.Usuario", "UsuarioDoador")
                        .WithMany()
                        .HasForeignKey("IdUsuarioDoador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioDoador");
                });

            modelBuilder.Entity("app.Models.OpcaoAgendamentoOferta", b =>
                {
                    b.HasOne("app.Models.OfertaDoacao", "Oferta")
                        .WithMany("OpcoesAgendamento")
                        .HasForeignKey("IdOferta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Oferta");
                });

            modelBuilder.Entity("app.Models.OpcaoAgendamentoSolicit", b =>
                {
                    b.HasOne("app.Models.SolicitacaoDoacao", "SolicitacaoDoacao")
                        .WithMany("AgendamentosSolicitacao")
                        .HasForeignKey("SolicitacaoDoacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SolicitacaoDoacao");
                });

            modelBuilder.Entity("app.Models.SolicitacaoDoacao", b =>
                {
                    b.HasOne("app.Models.Usuario", "UsuarioOng")
                        .WithMany()
                        .HasForeignKey("IdUsuarioOng");

                    b.Navigation("UsuarioOng");
                });

            modelBuilder.Entity("app.Models.Transacao", b =>
                {
                    b.HasOne("app.Models.Usuario", "Doador")
                        .WithMany()
                        .HasForeignKey("IdDoador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("app.Models.OfertaDoacao", "Oferta")
                        .WithMany()
                        .HasForeignKey("IdOferta");

                    b.HasOne("app.Models.Usuario", "Ong")
                        .WithMany()
                        .HasForeignKey("IdOng")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("app.Models.SolicitacaoDoacao", "Solicitacao")
                        .WithMany()
                        .HasForeignKey("IdSolicitacao");

                    b.Navigation("Doador");

                    b.Navigation("Oferta");

                    b.Navigation("Ong");

                    b.Navigation("Solicitacao");
                });

            modelBuilder.Entity("app.Models.OfertaDoacao", b =>
                {
                    b.Navigation("ItensOferta");

                    b.Navigation("OpcoesAgendamento");
                });

            modelBuilder.Entity("app.Models.SolicitacaoDoacao", b =>
                {
                    b.Navigation("AgendamentosSolicitacao");

                    b.Navigation("ItensSolicitacao");
                });
#pragma warning restore 612, 618
        }
    }
}
